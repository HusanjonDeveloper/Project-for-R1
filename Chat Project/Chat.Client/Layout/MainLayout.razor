@using Chat.Client.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inherits LayoutComponentBase
@inject AuthenticationStateProvider StateProvider
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            @if (isAuthorized)
            {
            <button type="submit" class="btn btn-outline-danger" @onclick="LogOut">Log out</button>
            }


        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>



@code{
    bool isAuthorized { get; set; } = false;

    private async Task LogOut()
    {
        await StorageService.DeleteToken();

        Navigation.Refresh(true);
    }


    protected override async Task OnInitializedAsync()
    {

        var stateProvider = (CustomAuthHandler)StateProvider;

        var state = await stateProvider.GetAuthenticationStateAsync();

        var user = state.User;
    }

}
